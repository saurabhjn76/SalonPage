<?xml version="1.0" encoding="utf-8"?>

<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="350dp"
    android:background="@color/colorBackground"
    android:layout_height="400dp">

    <!-- A vertical LinearLayout in a ScrollView. This emulates a ListView (and is lighter weight
         than a ListView when there aren't many rows). -->
    <LinearLayout
        android:orientation="horizontal"
        android:id="@+id/price_header"
        android:layout_width="match_parent"
        android:layout_height="20dp"
        android:layout_gravity="top">
        <TextView
            android:layout_width="180dp"
            android:layout_height="wrap_content"
            android:textStyle="bold"
            android:textSize="16sp"
            android:text="Country"/>
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/add_item"
            android:textStyle="bold"
            android:textSize="16sp"
            android:clickable="true"
            android:layout_gravity="right"
            android:text="ADDDDDD"/>
    </LinearLayout>

    <ScrollView android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="30dp"
        >

        <!-- Note that this LinearLayout has the "animateLayoutChanges" property set to true.
             This tells the framework to automatically animate child views (in this case, rows)
             as they are added to and removed from the LinearLayout. -->
        <LinearLayout android:id="@+id/container"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:showDividers="middle"
            android:divider="?android:dividerHorizontal"
            android:animateLayoutChanges="true"
            android:paddingLeft="16dp"
            android:paddingRight="16dp" />
    </ScrollView>

    <!-- The "empty" view to show when there are no items in the "list" view defined above. -->
    <TextView android:id="@android:id/empty"
        style="?android:textAppearanceSmall"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:padding="32dp"
        android:text="@string/message_empty_layout_changes"
        android:textColor="?android:textColorSecondary" />



</FrameLayout>